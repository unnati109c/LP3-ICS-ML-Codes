package finalcodes;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class AES {
    public static void main(String[] args) {
        try {
            byte[] plainText = "ICS Practical Exam".getBytes();
            System.out.println("PLAIN TEXT : " + new String(plainText));

            KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
            SecretKey aesKey = keyGenerator.generateKey();

            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");

            byte[] encryptedText = encryption(plainText, aesKey, cipher);
            System.out.println("ENCRYPTED TEXT : " + new String(encryptedText));

            byte[] decryptedText = decryption(aesKey, cipher, encryptedText);
            System.out.println("DECRYPTED TEXT : " + new String(decryptedText));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static byte[] decryption(SecretKey aesKey, Cipher cipher, byte[] encryptedText) throws java.security.GeneralSecurityException {
        cipher.init(Cipher.DECRYPT_MODE, aesKey);
        byte[] decryptedText = cipher.doFinal(encryptedText);
        return decryptedText;
    }

    private static byte[] encryption(byte[] plainText, SecretKey aesKey, Cipher cipher) throws java.security.GeneralSecurityException {
        cipher.init(Cipher.ENCRYPT_MODE, aesKey);
        byte[] encryptedText = cipher.doFinal(plainText);
        return encryptedText;
    }
}
